# .travis.yml
# Configure Travis CI service for  http://github.com/libLAS
language: cpp

branches:
  only:
    - master
    - coverity_scan

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    # via the "travis encrypt" command using the project repo's public key
    - secure: "Gtn9mkLA8jmtZNw0jMp/MYiwDLk6X/barU8tEh/7wMRkxnG5qvubQxFzw787w3UdPackB+16qB4OO6zbABTrz33L5L4eN0oMCWAG/T7/Y+Q3ys8nOxpg7jCBa3xh+ecGm/Ky8g/4iptdmxGNRp1cjeDfpy75C0j8UOH+vN+4HtI="

matrix:
  include:
    - env: USE_CXX=clang
      compiler: clang
    - env: USE_CXX=g++
      compiler: gcc
    - env: USE_CXX=g++5
      compiler: gcc
      addons:
        apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - g++-5
              - libgeotiff-dev
        coverity_scan:
          project:
            name: "libLAS/libLAS"
            description: "C/C++ library for reading and writing the ASPRS LAS format"
          notification_email: mateusz@loskot.net
          build_command_prepend: mkdir -p build.coverity && pushd build.coverity && cmake -DWITH_GDAL=ON -DWITH_GEOTIFF=ON -DCMAKE_BUILD_TYPE=Debug .. && popd
          build_command: cmake --build ./build.coverity
          branch_pattern: coverity_scan

before_install:
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
  - if [[ "$USE_CXX" == "g++5" ]]; then sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 20; fi
  - if [[ "$USE_CXX" == "g++5" ]]; then sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 20; fi
  - if [[ "$USE_CXX" == "g++5" ]]; then sudo update-alternatives --config gcc; fi
  - if [[ "$USE_CXX" == "g++5" ]]; then sudo update-alternatives --config g++; fi
  - $CXX --version
  - ./bin/ci/before_install.sh

script: ./bin/ci/script.sh
